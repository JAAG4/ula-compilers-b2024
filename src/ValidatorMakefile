CXX = g++
FLEX = flex
BISON = bison -Wcounterexamples --defines=token.h

all: validator

repl: parser.o scanner.o expressions.o
	$(CXX)  repl.cpp scanner.o parser.o expressions.o -o repl
validator: parser.o scanner.o main_validator.o expressions.o
	$(CXX) scanner.o parser.o main_validator.o expressions.o -o ../build/validator

_scanner: scanner.o main_scanner.o
	$(CC) scanner.o main_scanner.o -o ../build/$@

main_scanner.o: main_scanner.c token.h
	$(CC) -c $< -o $@

parser.o: parser.c
	$(CXX) -c parser.c

parser.c: parser.bison
	$(BISON) -v --output parser.c parser.bison

scanner.o: token.h scanner.c
	$(CXX) -c scanner.c

scanner.c: scanner.flex
	$(FLEX) -o scanner.c scanner.flex

main_validator.o: token.h main_validator.c
	$(CXX) -c main_validator.c

expressions.o: expressions.hpp expressions.cpp
	$(CXX) -c -I. expressions.cpp

.PHONY:
clean:
	$(RM) *.o parser.c parser.output token.h scanner.c validator _scanner ../build/validator repl